/// <reference types="node" />
import * as call from './call';
import * as globalState from './global-state';
import * as header from './header';
import * as history from './history';
import * as machine from './machine';
import * as message from './message';
import * as accessWitness from './accessWitness';
import * as storage from './storage';
import * as logs from './logs';
import * as toHex from './toHex';
declare const _default: {
    toHex: typeof toHex;
    Log0Witness: typeof logs.Log0Witness;
    Log1Witness: typeof logs.Log1Witness;
    Log2Witness: typeof logs.Log2Witness;
    Log3Witness: typeof logs.Log3Witness;
    Log4Witness: typeof logs.Log4Witness;
    SloadWitness: typeof storage.SloadWitness;
    SstoreWitness: typeof storage.SstoreWitness;
    abiEncode(encodeable: accessWitness.AbiEncodeable): Buffer;
    encodeAccess(access: accessWitness.default): string;
    Status: typeof message.Status;
    MessageWitness: typeof message.default;
    GasWitness: typeof machine.GasWitness;
    BlockHashWitness: typeof history.BlockHashWitness;
    CoinbaseWitness: typeof header.CoinbaseWitness;
    TimestampWitness: typeof header.TimestampWitness;
    NumberWitness: typeof header.NumberWitness;
    DifficultyWitness: typeof header.DifficultyWitness;
    GaslimitWitness: typeof header.GaslimitWitness;
    ChainidWitness: typeof header.ChainidWitness;
    BalanceWitness: typeof globalState.BalanceWitness;
    SelfBalanceWitness: typeof globalState.SelfBalanceWitness;
    ExtCodeHashWitness: typeof globalState.ExtCodeHashWitness;
    ExtCodeSizeWitness: typeof globalState.ExtCodeSizeWitness;
    ExtCodeCopyWitness: typeof globalState.ExtCodeCopyWitness;
    CallWitness: typeof call.CallWitness;
    CallCodeWitness: typeof call.CallCodeWitness;
    DelegateCallWitness: typeof call.DelegateCallWitness;
    StaticCallWitness: typeof call.StaticCallWitness;
};
export default _default;
